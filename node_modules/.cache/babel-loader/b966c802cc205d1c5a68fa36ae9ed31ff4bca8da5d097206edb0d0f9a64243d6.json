{"ast":null,"code":"var _jsxFileName = \"/home/cashmatrix/PolygonToken/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { CONTRACTS_BY_CHAIN } from \"./constants/contracts\";\nimport { BrowserProvider } from \"ethers\";\nimport TokenCard from \"./components/TokenCard\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [signer, setSigner] = useState(null);\n  const [config, setConfig] = useState(null);\n  useEffect(() => {\n    const setup = async () => {\n      try {\n        if (!window.ethereum) {\n          alert(\"No wallet detected. Please install MetaMask.\");\n          return;\n        }\n        const provider = new BrowserProvider(window.ethereum);\n        await provider.send(\"eth_requestAccounts\", []);\n        const signerInstance = await provider.getSigner();\n        setSigner(signerInstance);\n        const {\n          chainId\n        } = await provider.getNetwork();\n        console.log(\"‚úÖ Detected Chain ID:\", chainId);\n        const cfg = CONTRACTS_BY_CHAIN[chainId];\n        if (!cfg) {\n          alert(`Unsupported chain ID: ${chainId}`);\n          return;\n        }\n        setConfig(cfg);\n      } catch (err) {\n        console.error(\"Connection error:\", err);\n        alert(\"Failed to connect wallet.\");\n      }\n    };\n    setup();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"2rem\",\n      fontFamily: \"Arial\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83E\\uDE99 JUSD Wallet \\u2014 Sam Technology\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), !config || !signer ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u23F3 Connecting wallet and detecting network...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83C\\uDF10 Connected to \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: config.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), Object.entries(config.tokens).map(([name, address]) => /*#__PURE__*/_jsxDEV(TokenCard, {\n        name: name,\n        address: address,\n        signer: signer\n      }, name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"AQzb+i9Np+XhIH5T97nXtVgeezE=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","CONTRACTS_BY_CHAIN","BrowserProvider","TokenCard","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","signer","setSigner","config","setConfig","setup","window","ethereum","alert","provider","send","signerInstance","getSigner","chainId","getNetwork","console","log","cfg","err","error","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","name","Object","entries","tokens","map","address","_c","$RefreshReg$"],"sources":["/home/cashmatrix/PolygonToken/frontend/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { CONTRACTS_BY_CHAIN } from \"./constants/contracts\";\nimport { BrowserProvider } from \"ethers\";\nimport TokenCard from \"./components/TokenCard\";\n\nexport default function App() {\n  const [signer, setSigner] = useState(null);\n  const [config, setConfig] = useState(null);\n\n  useEffect(() => {\n    const setup = async () => {\n      try {\n        if (!window.ethereum) {\n          alert(\"No wallet detected. Please install MetaMask.\");\n          return;\n        }\n\n        const provider = new BrowserProvider(window.ethereum);\n        await provider.send(\"eth_requestAccounts\", []);\n        const signerInstance = await provider.getSigner();\n        setSigner(signerInstance);\n\n        const { chainId } = await provider.getNetwork();\n        console.log(\"‚úÖ Detected Chain ID:\", chainId);\n\n        const cfg = CONTRACTS_BY_CHAIN[chainId];\n        if (!cfg) {\n          alert(`Unsupported chain ID: ${chainId}`);\n          return;\n        }\n\n        setConfig(cfg);\n      } catch (err) {\n        console.error(\"Connection error:\", err);\n        alert(\"Failed to connect wallet.\");\n      }\n    };\n\n    setup();\n  }, []);\n\n  return (\n    <div style={{ padding: \"2rem\", fontFamily: \"Arial\" }}>\n      <h1>ü™ô JUSD Wallet ‚Äî Sam Technology</h1>\n      {!config || !signer ? (\n        <p>‚è≥ Connecting wallet and detecting network...</p>\n      ) : (\n        <>\n          <p>üåê Connected to <strong>{config.name}</strong></p>\n          {Object.entries(config.tokens).map(([name, address]) => (\n            <TokenCard key={name} name={name} address={address} signer={signer} />\n          ))}\n        </>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}