{"ast":null,"code":"var _jsxFileName = \"/home/cashmatrix/PolygonToken/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { CONTRACTS_BY_CHAIN } from \"./constants/contracts\";\nimport { BrowserProvider, Contract, parseUnits } from \"ethers\";\nimport TokenCard from \"./components/TokenCard\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [signer, setSigner] = useState(null);\n  const [config, setConfig] = useState(null);\n  useEffect(() => {\n    const setup = async () => {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = provider.getSigner();\n      setSigner(signer);\n      const {\n        chainId\n      } = await provider.getNetwork();\n      const cfg = CONTRACTS_BY_CHAIN[chainId];\n      if (!cfg) return alert(\"Unsupported chain\");\n      setConfig(cfg);\n    };\n    setup();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"2rem\",\n      fontFamily: \"Arial\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83E\\uDE99 JUSD Wallet Sam Technology\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), !config ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u23F3 Detecting chain...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83C\\uDF10 Connected to: \", config.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), Object.entries(config.tokens).map(([name, addr]) => /*#__PURE__*/_jsxDEV(TokenCard, {\n        name: name,\n        address: addr,\n        signer: signer\n      }, name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"AQzb+i9Np+XhIH5T97nXtVgeezE=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","CONTRACTS_BY_CHAIN","BrowserProvider","Contract","parseUnits","TokenCard","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","signer","setSigner","config","setConfig","setup","provider","ethers","providers","Web3Provider","window","ethereum","send","getSigner","chainId","getNetwork","cfg","alert","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","name","Object","entries","tokens","map","addr","address","_c","$RefreshReg$"],"sources":["/home/cashmatrix/PolygonToken/frontend/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { CONTRACTS_BY_CHAIN } from \"./constants/contracts\";\nimport { BrowserProvider, Contract, parseUnits } from \"ethers\";\nimport TokenCard from \"./components/TokenCard\";\n\nexport default function App() {\n  const [signer, setSigner] = useState(null);\n  const [config, setConfig] = useState(null);\n\n  useEffect(() => {\n    const setup = async () => {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = provider.getSigner();\n      setSigner(signer);\n\n      const { chainId } = await provider.getNetwork();\n      const cfg = CONTRACTS_BY_CHAIN[chainId];\n      if (!cfg) return alert(\"Unsupported chain\");\n      setConfig(cfg);\n    };\n    setup();\n  }, []);\n\n  return (\n    <div style={{ padding: \"2rem\", fontFamily: \"Arial\" }}>\n      <h1>ü™ô JUSD Wallet Sam Technology</h1>\n      {!config ? <p>‚è≥ Detecting chain...</p> : (\n        <>\n          <p>üåê Connected to: {config.name}</p>\n          {Object.entries(config.tokens).map(([name, addr]) => (\n            <TokenCard key={name} name={name} address={addr} signer={signer} />\n          ))}\n        </>\n      )}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,kBAAkB,QAAQ,uBAAuB;AAC1D,SAASC,eAAe,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,QAAQ;AAC9D,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/C,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd,MAAMiB,KAAK,GAAG,MAAAA,CAAA,KAAY;MACxB,MAAMC,QAAQ,GAAG,IAAIC,MAAM,CAACC,SAAS,CAACC,YAAY,CAACC,MAAM,CAACC,QAAQ,CAAC;MACnE,MAAML,QAAQ,CAACM,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC;MAC9C,MAAMX,MAAM,GAAGK,QAAQ,CAACO,SAAS,CAAC,CAAC;MACnCX,SAAS,CAACD,MAAM,CAAC;MAEjB,MAAM;QAAEa;MAAQ,CAAC,GAAG,MAAMR,QAAQ,CAACS,UAAU,CAAC,CAAC;MAC/C,MAAMC,GAAG,GAAG1B,kBAAkB,CAACwB,OAAO,CAAC;MACvC,IAAI,CAACE,GAAG,EAAE,OAAOC,KAAK,CAAC,mBAAmB,CAAC;MAC3Cb,SAAS,CAACY,GAAG,CAAC;IAChB,CAAC;IACDX,KAAK,CAAC,CAAC;EACT,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA;IAAKsB,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,UAAU,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBACnDzB,OAAA;MAAAyB,QAAA,EAAI;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrC,CAACtB,MAAM,gBAAGP,OAAA;MAAAyB,QAAA,EAAG;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBACpC7B,OAAA,CAAAE,SAAA;MAAAuB,QAAA,gBACEzB,OAAA;QAAAyB,QAAA,GAAG,6BAAiB,EAAClB,MAAM,CAACuB,IAAI;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACpCE,MAAM,CAACC,OAAO,CAACzB,MAAM,CAAC0B,MAAM,CAAC,CAACC,GAAG,CAAC,CAAC,CAACJ,IAAI,EAAEK,IAAI,CAAC,kBAC9CnC,OAAA,CAACF,SAAS;QAAYgC,IAAI,EAAEA,IAAK;QAACM,OAAO,EAAED,IAAK;QAAC9B,MAAM,EAAEA;MAAO,GAAhDyB,IAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA8C,CACnE,CAAC;IAAA,eACF,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACzB,EAAA,CAhCuBD,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}